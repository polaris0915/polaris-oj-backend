// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package allModels

import (
	"time"

	"gorm.io/gorm"
)

const TableNameQuestion = "question"

// Question 题目
type Question struct {
	ID          int64          `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true;comment:id" json:"id"`                             // id
	Identity    string         `gorm:"column:identity;type:varchar(36);not null;index:idx_identity,priority:1;comment:唯一ID" json:"identity"` // 唯一ID
	Title       string         `gorm:"column:title;type:varchar(512);comment:标题" json:"title"`                                               // 标题
	Content     string         `gorm:"column:content;type:text;comment:内容" json:"content"`                                                   // 内容
	Tags        string         `gorm:"column:tags;type:varchar(1024);comment:标签列表（json 数组）" json:"tags"`                                     // 标签列表（json 数组）
	Answer      string         `gorm:"column:answer;type:text;comment:题目答案" json:"answer"`                                                   // 题目答案
	SubmitNum   int32          `gorm:"column:submitNum;type:int;not null;comment:题目提交数" json:"submitNum"`                                    // 题目提交数
	AcceptedNum int32          `gorm:"column:acceptedNum;type:int;not null;comment:题目通过数" json:"acceptedNum"`                                // 题目通过数
	JudgeCase   string         `gorm:"column:judgeCase;type:text;comment:判题用例（json 数组）" json:"judgeCase"`                                    // 判题用例（json 数组）
	JudgeConfig string         `gorm:"column:judgeConfig;type:text;comment:判题配置（json 对象）" json:"judgeConfig"`                                // 判题配置（json 对象）
	ThumbNum    int32          `gorm:"column:thumbNum;type:int;not null;comment:点赞数" json:"thumbNum"`                                        // 点赞数
	FavourNum   int32          `gorm:"column:favourNum;type:int;not null;comment:收藏数" json:"favourNum"`                                      // 收藏数
	UserID      string         `gorm:"column:userId;type:varchar(36);not null;index:idx_userId,priority:1;comment:创建用户唯一ID" json:"userId"`   // 创建用户唯一ID
	CreatedAt   time.Time      `gorm:"column:created_at;type:datetime;not null;comment:创建时间" json:"created_at"`                              // 创建时间
	UpdatedAt   time.Time      `gorm:"column:updated_at;type:datetime;not null;comment:更新时间" json:"updated_at"`                              // 更新时间
	DeletedAt   gorm.DeletedAt `gorm:"column:deleted_at;type:datetime;comment:删除时间" json:"deleted_at"`                                       // 删除时间
	User        *User          `gorm:"foreignKey:UserID;references:Identity" json:"user"`
}

// TableName Question's table name
func (*Question) TableName() string {
	return TableNameQuestion
}
