definitions:
  dto.DeleteRequest:
    properties:
      identity:
        type: string
    required:
    - identity
    type: object
  judgecase.JudgeCase:
    properties:
      input:
        type: string
      output:
        type: string
    type: object
  judgeconfig.JudgeConfig:
    properties:
      memoryLimit:
        type: integer
      stackLimit:
        type: integer
      timeLimit:
        type: integer
    type: object
  question_dto.QuestionAddRequest:
    properties:
      answer:
        type: string
      content:
        type: string
      identity:
        type: string
      judgeCase:
        items:
          $ref: '#/definitions/judgecase.JudgeCase'
        type: array
      judgeConfig:
        $ref: '#/definitions/judgeconfig.JudgeConfig'
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - answer
    - content
    - judgeCase
    - judgeConfig
    - title
    type: object
  question_dto.QuestionUpdateRequest:
    properties:
      answer:
        type: string
      content:
        type: string
      identity:
        type: string
      judgeCase:
        items:
          $ref: '#/definitions/judgecase.JudgeCase'
        type: array
      judgeConfig:
        $ref: '#/definitions/judgeconfig.JudgeConfig'
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - answer
    - content
    - identity
    - judgeCase
    - judgeConfig
    - tags
    - title
    type: object
  questionsubmit_dto.QuestionSubmitAddRequest:
    properties:
      conetnt:
        description: Status     int32  `json:"status"`                              //
          提交状态
        type: string
      language:
        description: 编程语言
        type: string
      questionId:
        description: 问题的identity
        type: string
    required:
    - language
    - questionId
    type: object
  questionsubmit_dto.QuestionSubmitQueryRequest:
    properties:
      current:
        type: integer
      language:
        description: 可以由以下三种类别来查询
        type: string
      pageSize:
        type: integer
      questionId:
        type: string
      sortField:
        type: string
      sortOrder:
        type: string
      status:
        type: integer
      userId:
        description: 管理员查询的是否可以用UserID来查询
        type: string
    type: object
  user_dto.UserAddRequest:
    properties:
      checkPassword:
        type: string
      userAccount:
        type: string
      userPassword:
        type: string
    required:
    - checkPassword
    - userAccount
    - userPassword
    type: object
  user_dto.UserLoginRequest:
    properties:
      userAccount:
        description: Identity     string `json:"identity,omitempty"`
        type: string
      userPassword:
        type: string
    required:
    - userAccount
    - userPassword
    type: object
  user_dto.UserUpdateMyUserRequest:
    properties:
      userAvatar:
        type: string
      userName:
        type: string
      userProfile:
        type: string
    type: object
  vo.BaseResponse:
    properties:
      code:
        description: 响应码
        type: integer
      data:
        description: 接口，表示具体信息
      err: {}
      message:
        description: 请求结果[发生错误则是错误信息，如果没有错误则是SUCCESS.Code的值]
        type: string
    type: object
info:
  contact: {}
paths:
  /api/get/user/login:
    get:
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 获取当前登录用户
      tags:
      - 公共方法
      - 用户
  /api/question/add:
    post:
      parameters:
      - description: add question info
        in: body
        name: addInfo
        required: true
        schema:
          $ref: '#/definitions/question_dto.QuestionAddRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 问题添加
      tags:
      - 私有方法
      - 问题
  /api/question/delete:
    post:
      parameters:
      - description: delete question info
        in: body
        name: deleteInfo
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 问题删除
      tags:
      - 私有方法
      - 问题
  /api/question/get:
    get:
      parameters:
      - description: identity
        in: query
        name: Identity
        required: true
        type: string
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 通过问题的Identity获取问题详情
      tags:
      - 私有方法
      - 问题
  /api/question/question_submit/do:
    post:
      parameters:
      - description: add questionSubmit info
        in: body
        name: addInfo
        required: true
        schema:
          $ref: '#/definitions/questionsubmit_dto.QuestionSubmitAddRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 添加问题提交记录
      tags:
      - 私有方法
      - 问题提交
  /api/question/question_submit/list/page:
    post:
      parameters:
      - description: query questionSubmit info
        in: body
        name: queryInfo
        required: true
        schema:
          $ref: '#/definitions/questionsubmit_dto.QuestionSubmitQueryRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 分页查询提交问题
      tags:
      - 私有方法
      - 问题提交
  /api/question/update:
    post:
      parameters:
      - description: update question info
        in: body
        name: updateInfo
        required: true
        schema:
          $ref: '#/definitions/question_dto.QuestionUpdateRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 问题修改
      tags:
      - 私有方法
      - 问题
  /api/user/delete:
    post:
      parameters:
      - description: delete question info
        in: body
        name: deleteInfo
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 用户删除
      tags:
      - 私有方法
      - 问题
  /api/user/login:
    post:
      parameters:
      - description: user login infos
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_dto.UserLoginRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 用户登陆
      tags:
      - 公共方法
      - 用户
  /api/user/logout:
    post:
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 用户退出登录
      tags:
      - 私有方法
      - 用户
  /api/user/my:
    post:
      parameters:
      - description: user login infos
        in: body
        name: updateInfo
        required: true
        schema:
          $ref: '#/definitions/user_dto.UserUpdateMyUserRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 用户更新自己的数据
      tags:
      - 私有方法
      - 用户
  /api/user/register:
    post:
      parameters:
      - description: user Register infos
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_dto.UserAddRequest'
      responses:
        "200":
          description: '{Code:"0",Data:{...}, Message:""}'
          schema:
            $ref: '#/definitions/vo.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: 用户注册
      tags:
      - 公共方法
      - 用户
swagger: "2.0"
